{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/joao/moveit/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/joao/moveit/src/context/ChallengeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setlevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrenteExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setlevel(level + 1);\n    setIsLevelModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('novo desafio', {\n        body: \"valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrenteExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"XFhuVzrKXLmOff4iACBqrzJ2vI8=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/joao/moveit/src/context/ChallengeContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setlevel","currentExperience","setCurrenteExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext, useState, ReactNode, useEffect } from 'react';\nimport Cookies from 'js-cookie'\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\n\ninterface Challenge {\n    type: 'body' | 'eye';\n    description: string;\n    amount: number\n}\n\ninterface ChallengesContextData {\n    level: number; \n    currentExperience: number; \n    experienceToNextLevel: number;\n    challengesCompleted: number;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    activeChallenge: Challenge;\n    resetChallenge: () => void;\n    completeChallenge: () => void\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\n\nexport function ChallengesProvider({ \n    children, \n    ...rest\n}: ChallengesProviderProps){\n\n    const [level, setlevel] = useState(rest.level ?? 1);\n    const [currentExperience, setCurrenteExperience] = useState(rest.currentExperience ?? 0)\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0)\n    \n    const [activeChallenge, setActiveChallenge] = useState(null)\n    const [isLevelUpModalOpen, setIsLevelModalOpen] = useState(false)\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n    \n    useEffect(() => {\n        Notification.requestPermission()    \n    }, [])\n\n    useEffect(() => {\n        Cookies.set('level', String(level))\n        Cookies.set('currentExperience', String(currentExperience))\n        Cookies.set('challengesCompleted', String(challengesCompleted))\n    }, [level, currentExperience, challengesCompleted])\n\n    function levelUp(){\n        setlevel(level + 1)\n        setIsLevelModalOpen(true)\n    }\n\n    function closeLevelUpModal(){\n        setIsLevelModalOpen(false)\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex];\n\n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === 'granted'){\n            new Notification('novo desafio', {\n                body: `valendo ${challenge.amount}xp!`\n            })\n        }\n    }\n\n    function resetChallenge() {\n        setActiveChallenge(null)\n    }\n\n    function completeChallenge() {\n        if(!activeChallenge){\n            return;\n        }\n\n        const {amount} = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if(finalExperience >= experienceToNextLevel){\n            finalExperience = finalExperience - experienceToNextLevel\n            levelUp();\n        }\n\n        setCurrenteExperience(finalExperience);\n        setActiveChallenge(null)\n        setChallengesCompleted(challengesCompleted + 1)\n    }\n\n    return (\n        <ChallengesContext.Provider \n        value={\n            {\n                level, \n                currentExperience, \n                challengesCompleted,\n                levelUp,\n                startNewChallenge,\n                activeChallenge,\n                resetChallenge,\n                experienceToNextLevel,\n                completeChallenge\n                }\n            }>\n            {children}\n\n            {isLevelUpModalOpen && <LevelUpModal/>}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}