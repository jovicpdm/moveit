{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/joao/moveit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/joao/moveit/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/joao/moveit/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport styles from '../styles/components/Coutdown.module.css';\nexport function Coutdown() {\n  _s();\n\n  var _useContext = useContext();\n\n  _objectDestructuringEmpty(_useContext);\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Coutdown, \"GEVSeSrD72hjJ3fa3BFTxaVyljk=\");\n\n_c = Coutdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coutdown\");","map":{"version":3,"sources":["/home/joao/moveit/src/components/Countdown.tsx"],"names":["useContext","styles","Coutdown","String","minutes","padStart","split","minuteLeft","minuteRight","seconds","secondLeft","secondRight","countdownContainer","hasFinished","countdownButton","isActive","countdownButtonActive","resetCountdown","startCountdown"],"mappings":";;;;;;;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AAEA,OAAOC,MAAP,MAAmB,0CAAnB;AAGA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AAAA,oBACZF,UAAU,EADE;;AAAA;;AAAA,8BAGWG,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAHX;AAAA;AAAA,MAGhBC,UAHgB;AAAA,MAGJC,WAHI;;AAAA,+BAIWL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAJX;AAAA;AAAA,MAIhBI,UAJgB;AAAA,MAIJC,WAJI;;AAMvB,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAIV,MAAM,CAACW,kBAAzB;AAAA,8BACA;AAAA,gCACI;AAAA,oBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,gCACI;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAiBCE,WAAW,gBACP;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,SAAS,EAAIZ,MAAM,CAACa,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAUR;AAAA,gBACCC,QAAQ,gBACL;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,YAAOd,MAAM,CAACa,eAAd,cAAiCb,MAAM,CAACe,qBAAxC,CAFb;AAGI,QAAA,OAAO,EAAIC,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAQL;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAIhB,MAAM,CAACa,eAFxB;AAGI,QAAA,OAAO,EAAII,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ,qBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;;GAtDehB,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect, useContext } from 'react'\nimport { ChallengesContext } from '../context/ChallengeContext';\nimport styles from '../styles/components/Coutdown.module.css'\n\n\nexport function Coutdown() {\n    const {} = useContext();\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n    return(\n        <div>\n            <div className = {styles.countdownContainer}>\n            <div>\n                <span>{minuteLeft}</span>\n                <span>{minuteRight}</span>\n            </div>\n            <span>:</span>\n            <div>\n                <span>{secondLeft}</span>\n                <span>{secondRight}</span>\n            </div>\n        </div>\n\n\n        {/* ? é usado quando há duas condicionais\n            && é usado quando há uma */}\n\n        {hasFinished ? (\n             <button \n             disabled\n             type=\"button\" \n             className = {styles.countdownButton}\n             \n             >\n             ciclo encerrado    \n         </button>\n        ) : (\n            <>\n            {isActive ? (\n                <button \n                    type=\"button\" \n                    className = {`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                    onClick = {resetCountdown}>\n                    abandonar ciclo    \n                </button>\n            ) : (\n                <button \n                    type=\"button\" \n                    className = {styles.countdownButton}\n                    onClick = {startCountdown}>\n                    iniciar ciclo    \n                </button>\n        )}\n            </>\n        )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}