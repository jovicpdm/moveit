{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joao/moveit/src/components/Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Coutdown.module.css';\nlet countdownTimeout;\nexport function Coutdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countDownsetTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resetCountdown,\n      children: \"abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"iniciar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/joao/moveit/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Coutdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","countDownsetTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,QAAT,GAAoB;AAC3B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,KAAK,EAAN,CAAhC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMS,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAC,EAAhB,CAAhB;AACA,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;AAEA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;;AAEA,WAASG,cAAT,GAAyB;AACrBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASa,cAAT,GAAyB;AACrBb,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAAyB;AACrBiB,MAAAA,mBAAmB,CAAC,MAAI;AACpBhB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFkB,EAEhB,IAFgB,CAAnB;AAGH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQI,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAIH,MAAM,CAACqB,kBAAzB;AAAA,8BACA;AAAA,gCACI;AAAA,oBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaCZ,QAAQ,gBACL;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAK,GAAEL,MAAM,CAACsB,eAAgB,IAAGtB,MAAM,CAACuB,qBAAsB,EAF3E;AAGI,MAAA,OAAO,EAAIJ,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAQL;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAInB,MAAM,CAACsB,eAFxB;AAGI,MAAA,OAAO,EAAIJ,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH","sourcesContent":["import { useState, useEffect } from 'react'\nimport styles from '../styles/components/Coutdown.module.css'\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function Coutdown() {\nconst [time, setTime] = useState(25 * 60);\nconst [isActive, setIsActive] = useState(false)\n\nconst minutes = Math.floor(time/60);\nconst seconds = time % 60;\n\nconst [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\nconst [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\nfunction startCountdown(){\n    setIsActive(true)\n}\n\nfunction resetCountdown(){\n    setIsActive(false)\n}\n\nuseEffect(() => {\n    if (isActive && time > 0){\n        countDownsetTimeout(()=>{\n            setTime(time - 1)\n        }, 1000)\n    }\n}, [isActive, time])\n\n    return(\n        <div>\n            <div className = {styles.countdownContainer}>\n            <div>\n                <span>{minuteLeft}</span>\n                <span>{minuteRight}</span>\n            </div>\n            <span>:</span>\n            <div>\n                <span>{secondLeft}</span>\n                <span>{secondRight}</span>\n            </div>\n        </div>\n\n        {isActive ? (\n            <button \n                type=\"button\" \n                className = {`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                onClick = {resetCountdown}>\n                abandonar ciclo    \n            </button>\n        ) : (\n            <button \n                type=\"button\" \n                className = {styles.countdownButton}\n                onClick = {startCountdown}>\n                iniciar ciclo    \n            </button>\n        )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}