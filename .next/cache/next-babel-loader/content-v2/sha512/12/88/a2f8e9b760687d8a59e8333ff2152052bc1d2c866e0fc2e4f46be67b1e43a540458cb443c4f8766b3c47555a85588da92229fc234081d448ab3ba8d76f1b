{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/joao/moveit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/joao/moveit/src/context/ChallengeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setlevel = _useState[1];\n\n  var _useS = useS,\n      _useS2 = _slicedToArray(_useS, 2),\n      currentExperience = _useS2[0],\n      setCurrenteExperience = _useS2[1];\n\n  function levelUp() {\n    setlevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"ia99shDfcLm50/VlNuZRPcguBaM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/joao/moveit/src/context/ChallengeContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setlevel","useS","currentExperience","setCurrenteExperience","levelUp"],"mappings":";;;;;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAkD,OAAlD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAAkE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC3CH,QAAQ,CAAC,CAAD,CADmC;AAAA,MAC9DI,KAD8D;AAAA,MACvDC,QADuD;;AAAA,cAElBC,IAFkB;AAAA;AAAA,MAE9DC,iBAF8D;AAAA,MAE3CC,qBAF2C;;AAIrE,WAASC,OAAT,GAAkB;AACdJ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAALA,KAAD;AAAQK,MAAAA,OAAO,EAAPA;AAAR,KAAnC;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAbeD,kB;;KAAAA,kB","sourcesContent":["import {createContext, useState, ReactNode } from 'react';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps){\n    const [level, setlevel] = useState(1);\n    const [currentExperience, setCurrenteExperience] = useS\n    \n    function levelUp(){\n        setlevel(level + 1)\n    }\n\n    return (\n        <ChallengesContext.Provider value={{level, levelUp}}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}